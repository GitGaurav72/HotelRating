package com.novaedge.micro.userservice.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.novaedge.micro.userservice.entity.TbNovaMcroUser;
import com.novaedge.micro.userservice.service.TbNovaMcroUserService;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/users")
public class TbNovaMcroUserController {

    @Autowired
    private TbNovaMcroUserService userService;

    // Create or update a user
    @PostMapping
    public ResponseEntity<TbNovaMcroUser> createOrUpdateUser(@RequestBody TbNovaMcroUser user) {
        TbNovaMcroUser savedUser = userService.saveUser(user);
        return new ResponseEntity<>(savedUser, HttpStatus.CREATED);
    }

    // Get user by ID
    @GetMapping("/{userId}")
    public ResponseEntity<TbNovaMcroUser> getUserById(@PathVariable Long userId) {
        Optional<TbNovaMcroUser> user = userService.getUserById(userId);
        return user.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
    }

    // Get all users
    @GetMapping
    public ResponseEntity<List<TbNovaMcroUser>> getAllUsers() {
        List<TbNovaMcroUser> users = userService.getAllUsers();
        return ResponseEntity.ok(users);
    }

    // Delete user by ID
    @DeleteMapping("/{userId}")
    public ResponseEntity<Void> deleteUser(@PathVariable Long userId) {
        userService.deleteUser(userId);
        return ResponseEntity.noContent().build();
    }
}
